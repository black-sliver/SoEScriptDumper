/*
SoEScriptDumper's data.h
Copyright (C) 2020  black-sliver, neagix

In addition to the project's license (see LICENSE), this file by itself is also distributed under the following terms.


Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
#include <list>
#include <map>
#include <stdint.h>
#include <assert.h>

// some constants for rom adresses
#define HIROM_HEADER_ADDR 0x00ffb0
#define MAP_LIST_ADDR_US 0x9ffde7
#define MAP_LIST_ADDR_DE 0xa0fde5
#define MAX_MAPS 127
#define SCRIPTS_START_ADDR_US 0x928000
#define SCRIPTS_START_ADDR_DE 0x938000

// NOTE: we use a list to have ordering we want
static 
std::list< std::pair<uint8_t, const char*> > maps = {
    {0x38, "Prehistoria - South jungle / Start"},
    {0x33, "Prehistoria - Strong Heart's Exterior"},
    {0x34, "Prehistoria - Strong Heart's Hut"},
    {0x5c, "Prehistoria - Raptors"},
    {0x25, "Prehistoria - Fire Eyes' Village"},
    {0x51, "Prehistoria - Village Huts and Blimp's Hut"},
    {0x26, "Prehistoria - West area with Defend"},
    {0x5b, "Prehistoria - East jungle"},
    {0x59, "Prehistoria - Quick sand desert"},
    {0x67, "Prehistoria - Bugmuck exterior"},
    {0x16, "Prehistoria - BBM"},
    {0x17, "Prehistoria - Bug room 2"}, // all 3 levels
    {0x18, "Prehistoria - Thraxx' room"},
    {0x5a, "Prehistoria - Acid rain guy"},
    {0x41, "Prehistoria - North jungle"},
    {0x27, "Prehistoria - Mammoth Graveyard"},
    {0x69, "Prehistoria - Volcano path"},
    {0x52, "Prehistoria - Top of Volcano"}, // same for early and late game
    {0x50, "Prehistoria - Sky above Volcano"},
    {0x66, "Prehistoria - West of swamp"},
    {0x65, "Prehistoria - Swamp (main area)"},
    {0x01, "Prehistoria - Exterior of Blimp's Hut"},
    {0x3c, "Prehistoria - Volcano Room 1"},
    {0x3b, "Prehistoria - Volcano Room 2"},
    {0x3d, "Prehistoria - Pipe maze"},
    {0x3e, "Prehistoria - Side rooms of pipe maze"},
    {0x3f, "Prehistoria - Volcano Boss Room"},
    
    {0x36, "Prehistoria - Both fire pits (one room)"},
    
    {0x53, "Antiqua - Act2 Start Cutscene"},
    {0x6A, "Antiqua - Act2 Start Cutscene - waterfall"},
    
    {0x0A, "Antiqua - Nobilia, Market"},
    {0x08, "Antiqua - Nobilia, Square"},
    {0x09, "Antiqua - Nobilia, Square during Aegis fight"},
    {0x1e, "Antiqua - Nobilia, Arena Holding Room"},
    {0x1d, "Antiqua - Nobilia, Arena (Vigor Fight)"},
    {0x4c, "Antiqua - Nobilia, Fountain and snake statues"},
    {0x0b, "Antiqua - Nobilia, Palace grounds"}, // TODO: better definition?
    {0x4d, "Antiqua - Nobilia, Inside palace (Horace cutscene)"},
    {0x3a, "Antiqua - Nobilia, Fire pit"},
    {0x0c, "Antiqua - Nobilia, Inn"},
    {0x1c, "Antiqua - Nobilia, North of Market"},
    
    {0x1b, "Antiqua - Desert of Doom"},
    
    {0x6b, "Antiqua - Waterfall"},
    {0x05, "Antiqua - Between 'mids and halls"}, // this reads invalid but has pots
    {0x07, "Antiqua - West of Crustacia"},
    {0x4f, "Antiqua - East of Crustacia"},
    {0x2e, "Antiqua - Blimp's Cave"},
    {0x68, "Antiqua - Crustacia exterior"},
    {0x30, "Antiqua - Crustacia inside pirate ship"},
    {0x04, "Antiqua - Crustacia fire pit"},
    {0x2f, "Antiqua - Horace's camp"},
    {0x06, "Antiqua - Outside of 'mids"},
    {0x64, "Antiqua - Cave entrance under 'mids"},
    {0x55, "Antiqua - 'mids bottom level (Dog start)"},
    {0x56, "Antiqua - 'mids top level (Boy start)"},
    {0x57, "Antiqua - 'mids basement level (Tiny)"},
    {0x58, "Antiqua - 'mids boss room (Rimsala)"},
    {0x2b, "Antiqua - Outside of halls"},
    {0x29, "Antiqua - Halls main room"},
    {0x23, "Antiqua - Halls SW"},
    {0x24, "Antiqua - Halls NW"},
    {0x2c, "Antiqua - Halls SE"},
    {0x2d, "Antiqua - Halls NE"},
    {0x28, "Antiqua - Halls Collapsing Bridge"},
    {0x2a, "Antiqua - Halls Boss Room"},
    {0x4b, "Antiqua - Oglin cave"},
    {0x6d, "Antique - Aquagoth Room"},
    
    {0x35, "Act1 Quicksand, Bugmuck and Volcano caves + Act2 West Alchemy Cave"},
    
    {0x12, "Gothica - Ebon Keep sewers"},
    {0x13, "Gothica - Between Ebon Keep sewers, Dark Forest and Swamp"},
    {0x40, "Gothica - Swamp south of Gomi's Tower"},
    {0x37, "Gothica - Gomi's Tower"},
    {0x20, "Gothica - Timberdrake room in forest"},
    {0x1f, "Gothica - Doubles room in forest"},
    {0x22, "Gothica - Dark Forest"},
    {0x6c, "Gothica - SE of Ivor Tower (Well)"},
    {0x76, "Gothica - South of Ivor Tower (Gate)"},
    {0x7b, "Gothica - Ebon Keep and Ivor Tower Exterior Bottom Half"},
    {0x7c, "Gothica - Ebon Keep and Ivor Tower Exterior Top Half"},
    {0x7d, "Gothica - Ebon Keep and Ivor Tower Interior"},
    {0x4e, "Gothica - Ivor Tower, west alley (market)"},
    {0x62, "Gothica - Ivor Tower, west square (trailers)"},
    {0x63, "Gothica - Ivor Tower, inside trailers"},
    {0x19, "Gothica - Chessboard"},
    {0x1a, "Gothica - Below chessboard"},
    {0x21, "Gothica - Dark forest entrance (save point)"},
    {0x74, "Gothica - Ebon Keep and Ivory Tower dungeon + pipe room"},
    {0x0d, "Gothica - Ebon Keep Hall (Stairs, behind Verm)"},
    {0x0f, "Gothica - Ebon Keep West Room (Naris)"},
    {0x11, "Gothica - Ebon Keep Queen's Room"},
    {0x10, "Gothica - Ebon Keep Stained Glass Hallway"},
    {0x14, "Gothica - Ebon Keep Tinker's Room"},
    {0x39, "Gothica - Ebon Keep Fire pit"},
    {0x0e, "Gothica - Ebon Keep Dining Room"},
    {0x6e, "Gothica - Ivor Tower Hall"},
    {0x6f, "Gothica - Ivor Tower Dining Room"},
    {0x70, "Gothica - Ivor Tower Exterior Bridges and Balconies"},
    {0x71, "Gothica - Ivor Tower East Room + Kitchen"},
    {0x72, "Gothica - Ivor Tower East Upper Floor"},
    {0x73, "Gothica - Ivor Tower Dog Maze Underground"},
    {0x75, "Gothica - Ivor Tower Stariwell to dungeon"},
    {0x79, "Gothica - Ivor Tower Sewers"},
    {0x7a, "Gothica - Ivor Tower Sewers Exterior (landing spot)"},
    {0x5d, "Gothica - Ebon Keep Courtyard (South of Verm)"},
    {0x5e, "Gothica - Ebon Keep Front Room (Verm)"},
    {0x5f, "Gothica - Ebon Keep Verm side rooms"},
    {0x60, "Gothica - Ebon Keep Storage Room"},
    {0x78, "Gothica - Ivor Tower Queen's Room"},
    {0x77, "Gothica - Ivor Tower Puppet Show / Mungola"},
    
    {0x46, "Omnitopia - Professor's lab and ship area, (also?) Intro"},
    {0x48, "Omnitopia - Metroplex tunnels (rimsalas, spheres)"},
    {0x44, "Omnitopia - Greenhouse (dark or both?)"},
    {0x00, "Omnitopia - Alarm room"},
    {0x43, "Omnitopia - Control room"},
    {0x45, "Omnitopia - Secret boss room"},
    {0x47, "Omnitopia - Storage room"},
    {0x42, "Omnitopia - Reactor room and Reactor control"},
    {0x54, "Omnitopia - Shops"},
    {0x7e, "Omnitopia - Jail"},
    {0x49, "Omnitopia - Junkyard (Landing spot)"},
    {0x4a, "Omnitopia - Final Boss Room"},
    
    {0x61, "Opening - Scrolling over Machine"},
    {0x31, "Intro - Podunk 1965"},
    {0x02, "Intro - Mansion Exterior 1965"},
    {0x32, "Intro - Podunk 1995"},
    {0x03, "Intro - Mansion Exterior 1995"},
};

// NOTE: addresses below are probably NTSC/US only
static
#ifndef AUTO_DISCOVER_SCRIPTS
const
#endif
std::list< std::pair<uint32_t, const char*> > absscripts = {
    {0x92de49, "Intro-ingame transition script"},
    {0x99ebe2, "Vigor enter part [2] / script / animation"},
    {0x99ebd5, "Vigor applause?"},
    {0x99eb67, "Vigor script pt 3?"},
    {0x99ea06, "Vigor script pt 4?"},
    {0x99e9dc, "Vigor script pt 5?"},
    {0x99e417, "Vigor dead"},
    {0x95dce5, "Square outro cutscene"}, // this is RCALLed
    {0x92d92a, "Outro rain and sky color"},
    {0x96b8d9, "Timer Part ??"}, // this was found using a breakpoint
    {0x99cec1, "Timberdrake AI?"},
    {0x99cfa6, "Timberdrake AI? Part 2"},
    {0x99cf95, "Timberdrake AI? Part 3"},
    {0x99d39c, "Unknown script in Timberdrake enter"},
    {0x99bc6d, "Dark forest room change"},
    {0x99aa3d, "Dark forest room change Pt2"},
    {0x99b69b, "Dark forest room change Pt3"},
    {0x99af97, "Dark forest room change Pt4"},
    {0x99b3bf, "Dark forest room change Pt5"},
    {0x99b7df, "Dark forest room change Pt6"},
    {0x99b0bb, "Dark forest room change Pt7"},
    {0x99b36e, "Dark forest room change Pt8"},
    {0x99aa23, "Dark forest room change Pt9 (BG)"},
    {0x9581d5, "Crustacia intro"},
    {0x92a3d3, "Unknown"},
    {0x9582c9, "Crustacia intro after camera swipe"},
    {0x92a3e7, "Hide status bar layer"},
    {0x92a3ed, "Show status bar layer"},
    {0x989c84, "Queen below chessboard (Queen's Room enter script)"},
    {0x989bb5, "Queen below chessboard Pt2"},
    {0x92a3e7, "Queen below chessboard Pt3 (Also used elsewhere)"},
    {0x92de75, "Some cinematic script (used multiple times)"},
    {0x929e12, "Unknown Script 0x01"},
    {0x95b17e, "Blimp's cave"},
    {0x95b26f, "Blimp's cave in Crustacia"},
    {0x95b2ca, "Blimp's cave in Crustacia - dialog pt. 2"},
    {0x9BC5E7, "Strange script"},
    {0x9BC5D0, "Strange script caller"},
    {0x9BC562, "Before Strange script caller (1)"},
    {0x9BC5c1, "Before Strange script caller (2)"},
    {0x9bc497, "Intro Bazooka Gourd Opened"},
    {0x9bc4dd, "Unknown #7.1"},
    {0x9bc4fa, "Unknown #7.2"},
    {0x94832c, "Top of volcano [1]"},
    {0x9483cb, "Top of volcano [2]"},
    {0x94c1c5, "FE Gathering Pt1?"},
    {0x94c213, "FE Gathering Pt2?"},
    {0x94d363, "FE Cutscene 1"},
    {0x94d606, "FE Cutscene 2"},
    {0x94da6d, "FE Cutscene 3"},
    {0x94da42, "FE Cutscene Part (Flash) [1]"},
    {0x94d849, "FE First Encounter"},
    {0x94dceb, "Blimp in Hut after Salabog?"},
    {0x9a845c, "Puppet show [1] (fight)"},
    {0x9a8aea, "Puppet show [2] (no fight)"},
    {0x93c702, "Post thraxx cutscene"},
    {0x93ca9f, "Thraxx maggot trigger part"},
    {0x93ca75, "Thraxx enter part [1]"},
    {0x93ca69, "Thraxx enter part [2]"},
    {0x93c7f7, "Thraxx enter part [3]"},
    {0x93cb12, "Thraxx enter part [4]"},
    {0x93cb65, "Thraxx enter part [5]"},
    {0x94a35a, "Hardball dialog"},
    {0x9bdac9, "Prof. Lab part [1]"},
    {0x9bd074, "Prof. Lab part [2]"},
    {0x9bbcd9, "Prof. Lab part [3]"},
    {0x9bcdda, "Prof. Lab Call bead + Call up cutscene"},
    {0x9bc8d5, "Prof. Lab part [5]"},
    {0x9bc83a, "Prof. Lab part [6]"},
    {0x93ae82, "Acid rain dialog"},
    {0x95d248, "Palace cutscene part [1]"},
    {0x95d065, "Palace cutscene part [2]"},
    {0x95d31b, "Palace cutscene part [3]"},
    {0x95ba3f, "Crush dialog"},
    {0x96808f, "Market (timer expired?) part [1]"},
    {0x96811a, "Market (timer expired?) part [2]"},
    {0x9680ab, "Market (timer expired?) part [3]"},
    {0x93dacd, "Mammoth graveyard dialog"},
    {0x98d26c, "Lance cutscene"},
    {0x948000, "Top of volcano dialog"},
    {0x99a604, "Gomi's tower part [1]"},
    {0x99a377, "Gomi's tower part [2]"},
    {0x9996f0, "Lightning storm?"},
    {0x97819a, "Desert of Doom part [1]"},
    {0x96e3fe, "Desert of Doom part [2]"},
    {0x9bde41, "Junkyard landing?"},
    {0x92de7e, "Omnitopia hatch fade-in?"},
    {0x9ae24f, "Omnitopia hatch fade-out?"},
    {0x92bebd, "Loot money"},
    {0x97e060, "Aquagoth part? [1]"},
    {0x97e039, "Aquagoth part? [2]"},
    {0x98a862, "Prison door 7 with $2834&0x01 set"},
    {0x98a52c, "Prison door 7 with $2834&0x01 set Pt2"},
    {0x98a5ed, "Prison door 1 west castle [1]"},
    {0x98a607, "Prison door 1 west castle [2]"},
    {0x98ad85, "Entering prison part (Getting thrown in cutscene)"},
    {0x93d036, "Thraxx damage / kill part [1]"},
    {0x93ce25, "Thraxx damage / kill part [2]"},
    {0x92d7b1, "Fade to/from/flash white A?"},
    {0x92d723, "Fade to/from/flash white B?"},
    {0x92d752, "Fade to/from/flash white C?"},
    {0x92bf33, "Hold up weapon"},
    {0x94a6f5, "Cave raptors kill part [1] ??"},
    {0x92d594, "Megataur/Rimsala/DE reward"},
    {0x9589d3, "'mids [4] (sons?) part"},
    {0x99c3ff, "Doubles room enter part [1]"},
    {0x99c53e, "Doubles room enter part [2]"},
    {0x92d519, "Timberdrake Kill part [1]"},
    {0x92df70, "Boss kill part"},
    {0x95a8a4, "Tiny teleport script?"},
    {0x95a7c2, "Tiny teleport script? part [1]"},
    {0x95a899, "Tiny teleport script? part [2]"},
    {0x95a740, "Tiny teleport script? part [3]"},
    {0x95a75c, "Tiny teleport script? part [4]"},
    {0x959e45, "Tiny DE cutscene part? [1]"},
    {0x959efc, "Tiny DE cutscene part? [2]"},
    {0x95a329, "Tiny DE cutscene reward"},
    {0x959f00, "Tiny DE cutscene part? [4]"},
    {0x959e4d, "Tiny DE cutscene part? [5]"},
    {0x94bb17, "Magmar intro part [1]"},
    {0x94bc20, "Magmar intro part [2]"},
    {0x94ba3b, "Magmar intro part [3]"},
    {0x94baa9, "Magmar intro part [4]"},
    {0x94bd53, "Magmar outro"},
    {0x998c35, "Tinker part [1]"},
    {0x998942, "Tinker part [2]"},
    {0x9988de, "Tinker part [2b]"},
    {0x998910, "Tinker part [2c]"},
    {0x9986c4, "Tinker part [3]"},
    {0x99835b, "Tinker part [4]"},
    {0x9989a4, "Tinker part [5] (Rocket done?)"},
    {0x9a926d, "Mungola drop (found w/ hex editor)"}, // 0x9a9280 = text message
    {0x9be385, "Beyond end"},
    {0x9be38a, "End of Beyond end"},
    {0x96d6cf, "Horace pit cutscene"},
    {0x92cfe7, "Showcase Thraxx"},
    {0x92a3d3, "Intro part?"},
    {0x92a3e5, "Intro part?"},
    {0x92e401, "Intro part? running in BG"},
    {0x998956, "Giving Tinker rocket parts"},
    {0x998b39, "Dialog after giving Tinker rocket parts"},
#ifdef RANDO
    {0xb08018, "Select @Corrosion"},
    {0xb08030, "Select @Double Drain"},
    {0xb08036, "Select @Drain"},
    {0xb0800c, "Select @Barrier"},
#endif
    {0x94cd21, "FE Village call outro"},
    {0x94ca42, "FE Village actual outro"},
    {0x94cd25, "FE Village credits"},
    {0x95d9dd, "Sacred dog cutscene"},
    {0x92cc6c, "Unknown script in square"},
    {0x98e963, "Ebon Keep throne room outro"},
    {0x98eb25, "Ebon Keep throne room credits"},
    {0x98ebe0, "Ebon Keep throne room cutscene"},
#ifdef RANDO
    {0x97c144, "Randomizer Vigor fix"},
    {0x95d9e5, "Randomizer Sacred dog cutscene"}, // part of Sacred dog cutscene in vanilla
    {0xb08070, "Rando Jukebox 1"},
    {0xb08079, "Rando Jukebox 2"},
    {0xb08084, "Rando Jukebox 3"},
    {0xb08091, "Rando Jukebox impl"},
    {0xbd8000, "Rando remote item"},
#endif
    {0x95b945, "East of Crustacia Rock landing"},
    {0x95baaa, "East of Crustacia Enter Part 2"},
    {0x94de7d, "Blimp (in Hut) Part"},
    {0x93887d, "Progress Raptors"},
    {0x9abed9, "Banquet cutscene 1"},
    {0x9ac0f7, "Banquet cutscene 2"},
    {0x97edd8, "Queen's Key Door"},
    {0x95c53c, "North of Market guard"},
    {0xb18951, "Added gourdomizer drops"},
    {0x98daa0, "Cecil first talk"},
    {0x98db47, "Cecil first talk part"},
    {0x98dc2c, "Cecil shop"},
    {0x98dc9d, "Get Cecil's Bazooka"},
    {0x98be3a, "Don't buy"},
    {0x92cdb3, "Can't buy (not enough ...)"},
    {0x92cdbe, "Can't buy (inventory full)"},
    {0x99a861, "Dark forest sniff #0"}, 
    {0x99a8bb, "Dark forest sniff #1"},
    {0x99a9e7, "Dark forest sniff #2"},
    {0x99a951, "Dark forest sniff #3"},
    {0x99a8f7, "Dark forest sniff #4"},
    {0x99a96f, "Dark forest sniff #5"},
    {0x99aa05, "Dark forest sniff #6"},
    {0x99a87f, "Dark forest sniff #7"},
    {0x99a8d9, "Dark forest sniff #8"},
    {0x99a9c9, "Dark forest sniff #9"},
    {0x99a915, "Dark forest sniff #10"},
    {0x99a9ab, "Dark forest sniff #11"},
    {0x99a98d, "Dark forest sniff #12"},
    {0x99a89d, "Dark forest sniff #13"},
    {0x99a933, "Dark forest sniff #14"},
    {0x92db2a, "Unknown world map? #1"},
    {0x92db35, "Unknown world map? #2"},
    {0x92db56, "Unknown world map? #3"},
    {0x92db5c, "Unknown world map? #4"},
    {0x92db61, "Unknown world map? #5"},
    {0x92db66, "Unknown world map? #6"},
    {0x92db6b, "Unknown world map? #7"},
    {0x92db70, "Unknown world map? #8"},
    {0x92db75, "WW landing (found w/ breakpoint)"},
    {0x968416, "Fish guy cure formula"},
    {0x959de0, "Open Tiny's gate (3 switches)"},
    {0x99efce, "Verm spell cast"},
    {0x9b814e, "Generate act4 numeric codes"},
    {0x95c0c4, "Shop 10,000 jewel Amulet from Monk"},
    {0x95c0b3, "Unload 10,000 jewel Amulet Monk"},
    {0x939b29, "open 1st/cave/11th/last-center sand whirl"},
    {0x939dde, "close 1st/cave/11th/last-center sand whirl"},
    {0x939b68, "open 2nd/12th/last-right sand whirl"},
    {0x939e09, "close 2nd/12th/last-right sand whirl"},
    {0x939d21, "open 3rd/13th sand whirl"},
    {0x939f36, "close 3rd/13th sand whirl"},
    {0x939be6, "open 4th/14th sand whirl"},
    {0x939e5f, "close 4th/14th sand whirl"},
    {0x939ba7, "open far-right/last-left sand whirl"},
    {0x939e34, "close far-right/last-left sand whirl"},
    {0x939d60, "open below-far-right sand whirl"},
    {0x939f61, "close below-far-right sand whirl"},
    {0x939c25, "open 5th/15th sand whirl"},
    {0x939e8a, "close 5th/15th sand whirl"},
    {0x939d9f, "open nw-of-far-right sand whirl"},
    {0x939f8c, "close nw-of-far-right sand whirl"},
    {0x939ce2, "open left-of-far-right sand whirl"},
    {0x939f0b, "close left-of-far-right sand whirl"},
    {0x939c64, "open 6th sand whirl"},
    {0x939eb5, "close 6th sand whirl"},
    {0x93a59a, "Sand whirl script part [1]"},
    {0x93a524, "Sand whirl script part [2]"},
    {0x9997a7, "Sterling battle over, Gomi introduction"},
    {0x96e286, "Desert of Doom shuttle - random name-calling"},
    {0x978000, "Desert of Doom shuttle - Crustacia destination"},
    {0x96ef0d, "Desert of Doom shuttle - Nobilia destination"},
    {0x95e8a1, "Nobilia market - hidden medallion sale"},
    {0x969b8a, "Nobilia market - appraisal dialog"},
    {0x92cd9e, "Nobilia market - no trade with dog"},
    {0x92cdac, "Nobilia market - no trade with dog"},
    {0x92cd89, "Nobilia market - no trade with dog"},
    {0x92cd90, "Nobilia market - no trade with dog"},
    {0x92cd97, "Nobilia market - no trade with dog"},
    {0x96ad2a, "Nobilia market - prophet easter egg dialog"},
    {0x938369, "Prehistoria - planetfall"},
    {0x9a848d, "Gothica - The Show of Life"},
};

// NOTE: some IDs below are possibly NTSC/US only
static
#ifndef AUTO_DISCOVER_SCRIPTS
const
#endif
std::list< std::pair<uint16_t, const char*> > npcscripts = {
    {0x17cd, "Thraxx damage/kill"},
    {0x199e, "Aegis kill"},
    {0x1a79, "Vigor damage"},
    {0x1a70, "Footknight kill"},
    {0x1a82, "Puppet damage/kill"},
    {0x1a85, "Mungola? damage/kill"},
    {0x19b0, "Aquagoth"},
    {0x180c, "Jaguar ring dude"},
    {0x1809, "HB Guy"},
    {0x180f, "Cave NPC 3"},
    {0x1812, "Cave NPC 4"},
    {0x1818, "Cave raptors kill"},
    {0x1815, "Drain Guy"},
    {0x1b72, "Prof. Ruffelburg"},
    {0x17b8, "Acid Rain Guy"},
    {0x19cb, "Corrosion Guy"},
    {0x1860, "Defend Guy"},
    {0x1968, "Horace in Camp?"},
    {0x196b, "Horace Camp Madronius"},
    {0x196e, "Act2/Horace camp Inn keeper(s)"},
    {0x1992, "Madronius' Brother in Ruins"},
    {0x19b3, "Fire Power Dude"},
    {0x1a73, "Dude below chessboard"},
    {0x17d3, "Mammoth Viper 1"},
    {0x17d6, "Mammoth Viper 2"},
    {0x17d9, "Mammoth Viper 3"},
    {0x17dc, "Mammoth Viper 4"},
    {0x17df, "Mammoth Viper Commander"},
    {0x1a52, "Sterling"},
    {0x1ad3, "Naris"},
    {0x1971, "Sting Man"},
    {0x1806, "Volcano Room1 NPC 1"},
    {0x1803, "Speed dude"},
    {0x1863, "Strong Heart (inside Hut)"},
    {0x18bd, "Blimp (in cave)"},
    {0x185d, "Blimp (in hut)"},
    {0x1a46, "Regrowth Lady"},
    {0x1a58, "One Up Guy"},
    {0x1b75, "Junkyard Robot / Reflect"},
    {0x17af, "Raptors kill"},
    {0x19c5, "Doggo dies in prison?"},
    {0x1980, "Salabog damage/kill"},
    {0x17f4, "Viper commander kill"},
    {0x1794, "Halls Wings"},
    {0x1797, "Tiny Wings"},
    {0x198f, "Unknown script in Halls NE"},
    {0x1995, "Halls Mad Monk Kill"},
    {0x1998, "Megataur kill"},
    {0x18a5, "Rimsala kill"},
    {0x187b, "'mids [1]"},
    {0x187e, "'mids [2]"},
    {0x172b, "Unknown 0eac+0 (set in lots of places)"},
    {0x1872, "'mids [4] (sons?)"},
    {0x1a6a, "Doubles room save point"},
    {0x1a5e, "Doubles kill (first?)"},
    {0x1a61, "Doubles kill (others?)"},
    {0x1a64, "Doubles kill (last?)"},
    {0x1a6d, "Timberdrake Kill"},
    {0x1a7c, "Verm kill"},
    {0x181e, "Magmar damage"},
    {0x1a4f, "Tinker"},
    {0x172b, "Unknown eac+0 script. Prize drops?"},
    {0x178e, "BBM Wings"},
    {0x1857, "Fire Eyes"},
    {0x1845, "Hut NPC 1"},
    {0x1848, "Hut NPC 2"},
    {0x184b, "Hut NPC 3"},
    {0x184e, "Hut NPC 4"},
    {0x1851, "Hut NPC 5"},
    {0x1854, "Hut NPC 6"},
    {0x185a, "Hut NPC 7"},
    {0x1842, "FE Village NPC1"},
    {0x1827, "FE Village NPC2/Bee Boy"},
    {0x1839, "FE Village NPC3"},
    {0x182a, "FE Village NPC4"},
    {0x1824, "FE Village NPC5"},
    {0x1836, "FE Village NPC6"},
    {0x1833, "FE Village NPC7"},
    {0x182d, "FE Village NPC8"},
    {0x183f, "FE Village NPC9"},
    {0x183c, "FE Village NPC10"},
    {0x1830, "FE Village NPC11"},
    {0x1821, "FE Village NPC12"},
#if defined INCLUDE_MARKET || defined AUTO_DISCOVER_SCRIPTS
    {0x191d, "Market NPC 1"},
    {0x1920, "Market NPC 2"},
    {0x1944, "Market NPC 3"},
    {0x1923, "Market NPC 4"},
    {0x1929, "Market NPC 5"},
    {0x192c, "Market NPC 6"},
    {0x194d, "Market NPC 7"},
    {0x192f, "Market NPC 8"},
    {0x1932, "Market NPC 9"},
    {0x1947, "Market NPC 10"},
    {0x1935, "Market NPC 11"},
    {0x1950, "Market NPC 12"},
    {0x1938, "Market NPC 13"},
    {0x1953, "Market NPC 14"},
    {0x1941, "Market NPC 15"},
    {0x193e, "Market NPC 16"},
    {0x193b, "Market NPC 17"},
    {0x1926, "Market NPC 18"},
#endif
    {0x18f3, "North of Market Tiny dialog"},
    {0x19b6, "Dog Maze Lady"},
    {0x1a43, "Act3 shop?"},
    {0x1a07, "Lance dialog"},
    {0x1a22, "Act3 Houses NPC1"},
    {0x1a28, "Act3 Houses NPC2"},
    {0x1a0a, "Act3 Houses NPC3"},
    {0x1a1c, "Act3 Houses NPC4"},
    {0x1a0d, "Act3 Houses NPC5"},
    {0x1a13, "Act3 Houses NPC6"},
    {0x1a2b, "Act3 Houses NPC7"},
    {0x1a37, "Act3 Houses NPC8"},
    {0x1a10, "Act3 Houses NPC9"},
    {0x1a31, "Act3 Houses NPC10"},
    {0x1a16, "Act3 Houses NPC11"},
    {0x1a07, "Act3 Houses NPC12"},
    {0x1a3a, "Act3 Houses NPC13"},
    {0x1a19, "Act3 Houses NPC14"},
    {0x1a3d, "Act3 Houses NPC15"},
    {0x1a1f, "Act3 Houses NPC16"},
    {0x1a40, "Act3 Houses NPC17"},
    {0x1a34, "Act3 Houses NPC18"},
    {0x1a2e, "Act3 Houses NPC19"},
    {0x1a25, "Act3 Houses NPC20"},
    {0x1ad0, "Ivor Tower Well Guy"},
    {0x040e, "Desert of Doom - wrap player West"},
    {0x03f9, "Desert of Doom - wrap player East"},
    {0x1b5d, "Boss rush kill script"},
    {0x1b5a, "Boss rush loot script"},
};

// NOTE: some IDs below are possibly NTSC/US only
static
#ifndef AUTO_DISCOVER_SCRIPTS
const
#endif
std::list< std::pair<uint8_t, const char*> > globalscripts = {
    {0x00, "Fade-out / stop music"},
    {0x01, "Fade-in / start music"},
    {0x02, "Open message box?"},
    {0x07, "Open message box?"},
    {0x0a, "Open message box?"},
    {0x0b, "Open message box?"},
    {0x0d, "Prepare unframed text during Aquagoth defeat"},
    {0x19, "Prepare room change? West exit/east entrance outdoor-outdoor?"}, // outdoor<->indoor is probably actually change music or not
    {0x20, "Prepare room change? East exit/north entrance"},
    {0x1d, "Prepare room change? East exit/west entrance outdoor-outdoor?"},
    {0x21, "Prepare room change? South exit/north entrance outdoor-outdoor?"},
    {0x22, "Prepare room change? South exit/north entrance indoor-outdoor?"},
    {0x26, "Prepare room change? North exit/south entrance outdoor-indoor?"},
    {0x27, "Prepare room change? North exit/south entrance indoor-outdoor?"},
    {0x27, "Prepare room change? Falling?"},
    {0x2a, "Prepare room change? North exit/north entrance"},
    {0x32, "Market NPC talk (and others?)"},
    {0x33, "Market NPC end (and others?)"},
    {0x39, "Loot nature?"},
    {0x3a, "Loot gourd?"},
    {0x3b, "Loot other gourd ?"},
    {0x3e, "Loot part1?"},
    {0x3f, "Loot part2?"},
    {0x41, "Loot part3?"},
    {0x48, "Open shop menu?"},
    {0x4b, "Open shop menu Pt2?"},
    {0x4c, "Ask to equip spells"},
    {0x4d, "Save dialog"},
    {0x4e, "Actual save dialog"},
    {0x4f, "Actual saving"},
    {0x54, "Buy ingredients dialog"},
    {0x59, "Attraction mode, after Thraxx"},
    {0x5a, "Credits"},
    {0xff, "Salabog dead??"},
};

static const std::map<uint16_t, const char*> ram = {
    { 0x2391, "PRIZE    ($2391)" },
    { 0x2393, "AMOUNT   ($2393)" },
    { 0x2395, "MAP REF? ($2395)" }, // this is some value used in sub-scripts, possibly to disable/change the entity/map object/sprite
    { 0x2461, "NEXT ADD ($2461)" },
    { 0x238d, "CHANGE MUSIC ($238d)" },
    { 0x23c3, "DOGGO CLOSE  ($23c3)" },
    { 0x2443, "CHANGE DOGGO ($2443)" },
    { 0x234f, "PRISON TOWN EXIT ($234f)" },
    { 0x22fd, "DESERT WRAP X? ($22fd)" },
    { 0x22fc, "DESERT WRAP Y? ($22fc)" },
    { 0x234b, "Hut/house to enter ($234b)" },
    { 0x2441, "GET WEAPON ($2441)" },
    { 0x00c3, "SCREEN SHAKING ($00c3)" },
    { 0x2409, "SCREEN SHAKING MAGNITUDE X ($2409)" },
    { 0x240b, "SCREEN SHAKING MAGNITUDE Y ($240b)" },
    { 0x2445, "PRESELECT ALCHEMY ($2445)" },
    { 0x239b, "PRIZE 1 RATE ($239b)" },
    { 0x239d, "PRIZE 2 RATE ($239d)" },
    { 0x239f, "PRIZE 3 RATE ($239f)" },
    { 0x23a1, "PRIZE 1 DROP ($23a1)" },
    { 0x23a3, "PRIZE 2 DROP ($23a3)" },
    { 0x23a5, "PRIZE 3 DROP ($23a5)" },
    { 0x23a7, "PRIZE 1 QTY  ($23a7)" },
    { 0x23a9, "PRIZE 2 QTY  ($23a9)" },
    { 0x23ab, "PRIZE 3 QTY  ($23ab)" },
    { 0x2449, "SAVE SPOT ($2449)" },
    { 0x2459, "INGREDIENT SHOP ($2459)" },
    { 0x23e9, "MAP X start ($23e9)" },
    { 0x23eb, "MAP Y start ($23eb)" },
    { 0x23ed, "MAP X end   ($23ed)" },
    { 0x23ef, "MAP Y end   ($23ef)" },
    { 0x2352, "Queen's Key on Dog ($2352)" },
    { 0x2353, "Queen's Key on Boy ($2353)" },
};

static const std::map<uint16_t, const char*> prizes = {
    {0x0000, "Nothing (0x0000)"},
    {0x0001, "Money (0x0001)"},
    {0x0101, "Chocobo Egg? (0x0101)"}, // OTHER CHARMS ? This may read another address
    // rando exclusives:
    {0x0103, "Rando Thug's Cloak (0x0103)"},
    {0x0117, "Rando Knight Basher (0x0117)"},
    {0x0118, "Rando Atom Smasher (0x0118)"},
    {0x011c, "Rando Laser Lance (0x011c)"},
    {0x0125, "Rando Gauge (0x0125)"},
    {0x0131, "Rando Amulet of A. (0x0131)"},
    {0x01f1, "Rando Colosseum Breast (0x01f1)"},
    {0x01f2, "Rando Colosseum Gloves (0x01f2)"},
    {0x01f3, "Rando Colosseum Helmet (0x01f3)"},
    {0x01f4, "Rando progressive Breast (0x01f4)"},
    {0x01f5, "Rando progressive Gloves (0x01f5)"},
    {0x01f6, "Rando progressive Helmet (0x01f6)"},
    // 0x0200..0x020f: ingredients
    {0x0200, "Wax (0x0200)"},
    {0x0201, "Water (0x0201)"},
    {0x0202, "Vinegar (0x0202)"},
    {0x0203, "Roots (0x0203)"},
    {0x0204, "Oil (0x0204)"},
    {0x0205, "Mud Pepper (0x0205)"},
    {0x0206, "Mushroom (0x0206)"},
    {0x0207, "Meteorite (0x0207)"},
    {0x0208, "Limestone (0x0208)"},
    {0x0209, "Iron (0x0209)"},
    {0x020a, "Gunpowder (0x020a)"},
    {0x020b, "Grease (0x020b)"},
    {0x020c, "Feather (0x020c)"},
    {0x020d, "Ethanol (0x020d)"},
    {0x020e, "Dry Ice (0x020e)"},
    {0x020f, "Crystal (0x020f)"},
    {0x0210, "Clay (0x0210)"},
    {0x0211, "Brimstone (0x0211)"},
    {0x0212, "Bone (0x0212)"},
    {0x0213, "Atlas Medallion (0x0213)"},
    {0x0214, "Ash (0x0214)"},
    {0x0215, "Acorns (0x0215)"}, // that's all.
    // 0x0401..0x0428: equippment
    // what is 0x0400 ??
    {0x0401, "Grass Vest (0x0401)"},
    {0x0402,  "Shell Plate (0x0402)"},
    {0x0403,  "Dino Skin (0x0403)"},
    {0x0404,  "Bronze Chestplate (0x0404)"},
    {0x0405,  "Stone Vest (0x0405)"},
    {0x0406,  "Centurian Cape (0x0406)"},
    {0x0407,  "Silver Mail (0x0407)"},
    {0x0408, "Gold-Plated Vest (0x0408)"},
    {0x0409,  "Shining Armor (0x0409)"},
    {0x040a,  "Magna Mail (0x040a)"},
    {0x040b, "Titanium Vest (0x040b)"},
    {0x040c,  "Virtual Vest (0x040c)"},
    {0x040d,  "Grass Hat (0x40d)"},
    {0x040e, "Shell Hat (0x040e)"},
    {0x040f,  "Dinosaur Helmet (0x040f)"},
    {0x0410,  "Bronze Helmet (0x0410)"},
    {0x0411,  "Obsidian Helmet (0x0411)"},
    {0x0412,  "Centurian Helmet (0x0412)"},
    {0x0413,  "Titan's Crown (0x0413)"},
    {0x0414,  "Dragon Helmet (0x0414)"},
    {0x0415,  "Knight's Helmet (0x0415)"},
    {0x0416,  "Lightning Helmet (0x0416)"},
    {0x0417, "Old Reliable (0x0417)"},
    {0x0418,  "Brainstorm Helmet (0x0418)"},
    {0x0419,  "vine bracelet (0x0419)"},
    {0x041a, "Mammoth Guard (0x041a)"},
    {0x041b,  "Claw Guard (0x041b)"},
    {0x041c,  "Serpent Bracelet (0x041c)"},
    {0x041d,  "Bronze Gauntlet (0x041d)"},
    {0x041e,  "Gloves of Ra (0x041e)"},
    {0x041f, "Iron Bracer (0x041f)"},
    {0x0420,  "Magician's Ring (0x0420)"},
    {0x0421,  "Dragon's Claw (0x0421)"},
    {0x0422,  "Cyber Glove (0x0422)"},
    {0x0423, "Protector Ring (0x0423)"},
    {0x0424,  "Virtual Glove (0x0424)"},
    {0x0425,  "Leather Collar (0x0425)"},
    {0x0426,  "Spiky Collar (0x0426)"},
    {0x0427,  "Crusader Collar (0x0427)"},
    {0x0428,  "Spot's COllar (0x0428)"},
    // 0x0800..0x0807: items
    {0x0800, "Petal (0x0800)"},
    {0x0801, "Nectar (0x0801)"},
    {0x0802, "Honey (0x0802)"},
    {0x0803, "Biscuit (0x0803)"},
    {0x0804, "Wings (0x0804)"},
    {0x0805, "Herbal Essence (0x0805)"},
    {0x0806, "Pixie Dust (0x0806)"},
    {0x0807, "Call Beads (0x0807)"}, // that's all.
    // WEAPONS ?
    // BAZOOKA AMMUNITION ?
    // SPELLS LEARNED ?
};
static const std::map<uint16_t, const char*> doggos = {
    {0x02, "Wolf (0x02)"},
    {0x04, "Also Wolf (0x04)"},
    {0x06, "Greyhound (0x06)"},
    {0x08, "Poodle (0x08)"},
    {0x0A, "Regular (0x0A)"},
    {0x0C, "Toaster (0x0C)"},
    {0x0E, "Softlock (0x0E)"},
};
static const std::map<uint16_t, const char*> weapons = {
    {0x02, "Bone Crusher (0x02)"},
    {0x04, "Gladiator Sword (0x04)"},
    {0x06, "Crusader Sword (0x06)"},
    {0x08, "Neutron Blade (0x08)"},
    {0x0a, "Spider Claw (0x0a)"},
    {0x0c, "Bronze Axe (0x0c)"},
    {0x0e, "Knight Basher (0x0e)"},
    {0x10, "Atom Smasher (0x10)"},
    {0x12, "Horn Spear (0x12)"},
    {0x14, "Bronze Spear (0x14)"},
    {0x16, "Lance (0x16)"},
    {0x18, "Laser Lance (0x18)"},
    {0x1a, "Bazooka (0x1a)"},
    {0x1c, "Eqip bazooka without having it in inventory (different shell?) (0x1c)"},
    {0x1e, "Eqip bazooka without having it in inventory (different shell?) (0x1e)"},
    //{0x20, "Hard lock"},
    {0xffff, "REMOVE all weapons (0xFFFF)"}
};
static const std::map<uint16_t, const char*> alchemy_preselections = {
    {0x00, "Acid Rain (0x00)"},     {0x02, "Atlas (0x02)"},
    {0x04, "Barrier (0x04)"},       {0x06, "Call Up (0x06)"},
    {0x08, "Corrosion (0x08)"},     {0x0a, "Crush (0x0a)"},
    {0x0c, "Cure (0x0c)"},          {0x0e, "Defend (0x0e)"},
    {0x10, "Double Drain (0x10)"},  {0x12, "Drain (0x12)"},
    {0x14, "Energize (0x14)"},      {0x16, "Escape (0x16)"},
    {0x18, "Explosion (0x18)"},     {0x1a, "Fireball (0x1a)"},
    {0x1c, "Fire Power (0x1c)"},    {0x1e, "Flash (0x1e)"},
    {0x20, "Force Field (0x20)"},   {0x22, "Hard Ball (0x22)"},
    {0x24, "Heal (0x24)"},          {0x26, "Lance (0x26)"},
    {0x2a, "Levitate (0x2a)"},      {0x2c, "Lightning Storm (0x2c)"},
    {0x2e, "Miracle Cure (0x2e)"},  {0x30, "Nitro (0x30)"},
    {0x32, "One Up (0x32)"},        {0x34, "Reflect (0x34)"},
    {0x36, "Regrowth (0x36)"},      {0x38, "Revealer (0x38)"},
    {0x3a, "Revive (0x3a)"},        {0x3c, "Slow Burn (0x3c)"},
    {0x3e, "Speed (0x3e)"},         {0x40, "Sting (0x40)"},
    {0x42, "Stop (0x42)"},          {0x44, "Super Heal (0x44)"},
};
static const std::map<uint16_t, const char*> save_spots = {
    {0x0f, "Madronius' brother (0x0f)"},
};
static const std::map<uint16_t, std::map<uint16_t, const char*> > ramvalues = {
    {0x2391, prizes},
    {0x2441, weapons},
    {0x2443, doggos},
    {0x234b, { {0x09, "Blimp's hut (0x09)"} }},
    {0x2445, alchemy_preselections},
    {0x2449, save_spots},
};

static
#if __cplusplus>=201907L // or 17?
constexpr
#endif
uint8_t bm2bp(const uint8_t bp) {
    /*static_*/assert(bp==0x01||bp==0x02||bp==0x04||bp==0x08||
                      bp==0x10||bp==0x20||bp==0x40||bp==0x80);
    switch (bp) {
        case 0x01:
            return 0;
        case 0x02:
            return 1;
        case 0x04:
            return 2;
        case 0x08:
            return 3;
        case 0x10:
            return 4;
        case 0x20:
            return 5;
        case 0x40:
            return 6;
        case 0x80:
            return 7;
        default:
            return 0xff; // error
    }
}
        
static const std::map<std::pair<uint16_t, uint8_t>, const char*> flags = {
    // bp2bm: 0:0x01, 1:0x02, 2:0x04, 3:0x08, 4:0x10, 5:0x20, 6:0x40, 7:0x80
    {{0x2258, bm2bp(0x01)}, "Acid Rain"},
    {{0x2258, bm2bp(0x02)}, "Atlas"},
    {{0x2258, bm2bp(0x04)}, "Barrier"},
    {{0x2258, bm2bp(0x08)}, "Call Up"},
    {{0x2258, bm2bp(0x10)}, "Corrosion"},
    {{0x2258, bm2bp(0x20)}, "Crush"},
    {{0x2258, bm2bp(0x40)}, "Cure"},
    {{0x2258, bm2bp(0x80)}, "Defend"},
    {{0x2259, bm2bp(0x01)}, "Double Drain"},
    {{0x2259, bm2bp(0x02)}, "Drain"},
    {{0x2259, bm2bp(0x04)}, "Energize"},
    {{0x2259, bm2bp(0x08)}, "Escape"},
    {{0x2259, bm2bp(0x10)}, "Explosion"},
    {{0x2259, bm2bp(0x20)}, "Fireball"},
    {{0x2259, bm2bp(0x40)}, "Fire Power"},
    {{0x2259, bm2bp(0x80)}, "Flash"},
    {{0x225a, bm2bp(0x01)}, "Force Field"},
    {{0x225a, bm2bp(0x02)}, "Hard Ball"},
    {{0x225a, bm2bp(0x04)}, "Heal"},
    {{0x225a, bm2bp(0x08)}, "Lance"},
    {{0x225a, bm2bp(0x20)}, "Levitate"},
    {{0x225a, bm2bp(0x40)}, "Lightning Storm"},
    {{0x225a, bm2bp(0x80)}, "Miracle Cure"},
    {{0x225b, bm2bp(0x01)}, "Nitro"},
    {{0x225b, bm2bp(0x02)}, "One Up"},
    {{0x225b, bm2bp(0x04)}, "Reflect"},
    {{0x225b, bm2bp(0x08)}, "Regrowth"},
    {{0x225b, bm2bp(0x10)}, "Revealer"},
    {{0x225b, bm2bp(0x20)}, "Revive"},
    {{0x225b, bm2bp(0x40)}, "Slow Burn"},
    {{0x225b, bm2bp(0x80)}, "Speed"},
    {{0x225c, bm2bp(0x01)}, "Sting"},
    {{0x225c, bm2bp(0x02)}, "Stop"},
    {{0x225c, bm2bp(0x04)}, "Super Heal"},
    {{0x225c, bm2bp(0x08)}, "Rando: Aquagoth done"}, // unused in vanilla
    {{0x225c, bm2bp(0x10)}, "Rando: Volcano viper done"}, // unused in vanilla?
    {{0x225c, bm2bp(0x20)}, "Rando: Bronze spear monk done"}, // unused in vanilla?
    {{0x225c, bm2bp(0x40)}, "FE call beads?"},
    {{0x225c, bm2bp(0x80)}, "Horace call beads"},
    {{0x225d, bm2bp(0x01)}, "Camellia call beads"},
    {{0x225d, bm2bp(0x02)}, "Prof. callbeads"},
    {{0x225d, bm2bp(0x04)}, "Desert spin???"},
    {{0x225d, bm2bp(0x08)}, "Market timer expired"},
    {{0x225d, bm2bp(0x10)}, "Unknown Market flag/loot?"},
    {{0x225d, bm2bp(0x20)}, "Unknown Market flag"},
    {{0x225d, bm2bp(0x40)}, "Unknown Market flag"},
    {{0x225d, bm2bp(0x80)}, "Some Volcano Room2 flag?"},    
    {{0x225e, bm2bp(0x01)}, "Volcano Room2 Flag"},
    {{0x225e, bm2bp(0x02)}, "Volcano Room2 Flag"},
    {{0x225e, bm2bp(0x04)}, "Volcano Room2 Flag"},
    {{0x225e, bm2bp(0x08)}, "Volcano Room2 Flag"},
    {{0x225e, bm2bp(0x10)}, "Volcano Room2/ Flag"},
    {{0x225e, bm2bp(0x20)}, "Checked in North Jungle"},
    {{0x225e, bm2bp(0x40)}, "Volcano - Viper commander spawn?"},
    {{0x225e, bm2bp(0x80)}, "Talked to Blimp in hut?"},
    {{0x225f, bm2bp(0x01)}, "Doggo palace cutscene watched"},
    {{0x225f, bm2bp(0x02)}, "???"}, // unused?
    {{0x225f, bm2bp(0x04)}, "Some Mammoth Graveyard fight flag?"},
    {{0x225f, bm2bp(0x08)}, "Pipe Maze switch pressed?"},
    {{0x225f, bm2bp(0x10)}, "Pipe Maze Raptor shown?"},
    {{0x225f, bm2bp(0x20)}, "Vigor defeated"},
    {{0x225f, bm2bp(0x40)}, "Act1 Raptors fought"},
    {{0x225f, bm2bp(0x80)}, "Village post-thraxx message shown?"},
    {{0x2260, bm2bp(0x01)}, "???"}, // unused?
    {{0x2260, bm2bp(0x02)}, "???"}, // unused?
    {{0x2260, bm2bp(0x04)}, "Unknown, changes speed dude's dialog"},
    {{0x2260, bm2bp(0x08)}, "Thraxx maggots triggered"},
    {{0x2260, bm2bp(0x10)}, "Thraxx dead"},
    {{0x2260, bm2bp(0x20)}, "Magmar fight started?"},
    {{0x2260, bm2bp(0x40)}, "Magmar dead"},
    {{0x2260, bm2bp(0x80)}, "Unknown Crustacia indoors flag"},
    
    {{0x2261, bm2bp(0x01)}, "Dog unavailable"},
    {{0x2261, bm2bp(0x02)}, "Boy unavailable"},
    
    {{0x2261, bm2bp(0x04)}, "Unknown Market flag"},
    {{0x2261, bm2bp(0x08)}, "Unknown Market flag"},
    {{0x2261, bm2bp(0x10)}, "Unknown Market flag"},
    {{0x2261, bm2bp(0x20)}, "Armor Polish"},
    {{0x2261, bm2bp(0x40)}, "Chocobo Egg"},
    {{0x2261, bm2bp(0x80)}, "Insect Incense"},
    {{0x2262, bm2bp(0x01)}, "Jade Disk"},
    {{0x2262, bm2bp(0x02)}, "Jaguar Ring"},
    {{0x2262, bm2bp(0x04)}, "Magic Gourd"},
    {{0x2262, bm2bp(0x08)}, "Moxa Stick"},
    {{0x2262, bm2bp(0x10)}, "Oracle Bone"},
    {{0x2262, bm2bp(0x20)}, "Ruby Heart"},
    {{0x2262, bm2bp(0x40)}, "Silver Sheath"},
    {{0x2262, bm2bp(0x80)}, "Staff of Life"},
    {{0x2263, bm2bp(0x01)}, "Sun Stone"},
    {{0x2263, bm2bp(0x02)}, "Thug's Cloak"},
    {{0x2263, bm2bp(0x04)}, "Wizard's Coin"},
    {{0x2263, bm2bp(0x08)}, "Unknown Market flag"},
    {{0x2263, bm2bp(0x10)}, "Unknown Market flag"},
    {{0x2263, bm2bp(0x20)}, "Unknown Market flag"},
    {{0x2263, bm2bp(0x40)}, "Unknown Market flag"},
    {{0x2263, bm2bp(0x80)}, "Unknown Market flag"},
    {{0x2264, bm2bp(0x01)}, "Diamond Eye"},
    {{0x2264, bm2bp(0x02)}, "Diamond Eyes"},
    {{0x2264, bm2bp(0x04)}, "Gauge"},
    {{0x2264, bm2bp(0x08)}, "Wheel"},
    {{0x2264, bm2bp(0x10)}, "Queen's Key"},
    {{0x2264, bm2bp(0x20)}, "Energy Core"},
    {{0x2264, bm2bp(0x40)}, "Gourd in Act1 Huts"},
    {{0x2264, bm2bp(0x80)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x01)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x02)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x04)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x08)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x10)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x20)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x40)}, "Gourd in Act1 Huts"},
    {{0x2265, bm2bp(0x80)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x01)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x02)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x04)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x08)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x10)}, "???"},
    {{0x2266, bm2bp(0x20)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x40)}, "Gourd in Act1 Huts"},
    {{0x2266, bm2bp(0x80)}, "Gourd in Act1 Huts (w/ changing content)"},
    {{0x2267, bm2bp(0x01)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x02)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x04)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x08)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x10)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x20)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x40)}, "Gourd in Act1 Huts"},
    {{0x2267, bm2bp(0x80)}, "???"},
    {{0x2268, bm2bp(0x01)}, "Gourd in Act1 Huts"},
    {{0x2268, bm2bp(0x02)}, "Gourd near Defend (w/ changing content)"},
    {{0x2268, bm2bp(0x04)}, "Gourd near Defend"},
    {{0x2268, bm2bp(0x08)}, "Gourd near Defend"},
    {{0x2268, bm2bp(0x10)}, "Gourd in south Jungle"},
    {{0x2268, bm2bp(0x20)}, "Gourd in south Jungle"},
    {{0x2268, bm2bp(0x40)}, "Gourd in south Jungle"},
    {{0x2268, bm2bp(0x80)}, "Gourd in south Jungle"},
    
    {{0x2273, bm2bp(0x20)}, "top of volcano visited"},
    
    {{0x2281, bm2bp(0x40)}, "Honey gourd below 'mids'"},
    {{0x2281, bm2bp(0x80)}, "Herbal gourd below 'mids'"},
    {{0x2282, bm2bp(0x01)}, "Pixie dust gourd below 'mids'"},
    {{0x2282, bm2bp(0x02)}, "Ethanol gourd below 'mids'"},
    {{0x2282, bm2bp(0x04)}, "Wings gourd below 'mids'"},
    {{0x2282, bm2bp(0x08)}, "Call bead gourd below 'mids'"},
    {{0x2282, bm2bp(0x10)}, "Biscuit gourd below 'mids'"},
    
    {{0x2287, bm2bp(0x20)}, "Opened Laser Lance Gourd"},
    {{0x2288, bm2bp(0x04)}, "Received Petal or Honey in FE Village Huts"},
    {{0x2288, bm2bp(0x08)}, "Talked to defend guy"},
    {{0x228a, bm2bp(0x40)}, "Ruins SE switch activated"},
    {{0x228b, bm2bp(0x01)}, "FE visited pre-thraxx (East exit check)"},
    
    {{0x22c6, bm2bp(0x01)}, "(Unset) infinite callbead flag"},
    
    {{0x22d8, bm2bp(0x40)}, "Diamond Eye 'mids"},
    {{0x22d8, bm2bp(0x80)}, "Diamond Eye Halls"},
    {{0x22d9, bm2bp(0x01)}, "Horace met/Madronius spawned"},
    {{0x22d9, bm2bp(0x08)}, "Aegis dead"},
    
    {{0x22d9, bm2bp(0x20)}, "Diamond Eyes stolen"},
    
    {{0x22da, bm2bp(0x01)}, "Unused?"}, // TODO: test more. seems to do nothing
    {{0x22da, bm2bp(0x02)}, "Bone Crusher"},
    {{0x22da, bm2bp(0x04)}, "Gladiator Sword"},
    {{0x22da, bm2bp(0x08)}, "Crusader Sword"},
    {{0x22da, bm2bp(0x10)}, "Neutron Blade"},
    {{0x22da, bm2bp(0x20)}, "Spider's Claw"},
    {{0x22da, bm2bp(0x40)}, "Bronze Axe"},
    {{0x22da, bm2bp(0x80)}, "Knight Basher"},
    {{0x22db, bm2bp(0x01)}, "Atom Smasher"},
    {{0x22db, bm2bp(0x02)}, "Horn Spear"},
    {{0x22db, bm2bp(0x04)}, "Bronze Spear"},
    {{0x22db, bm2bp(0x08)}, "Lance"},
    {{0x22db, bm2bp(0x10)}, "Laser Lance"},
    {{0x22db, bm2bp(0x20)}, "Bazooka"},
    
    {{0x22db, bm2bp(0x40)}, "Horace's Aura"},
    {{0x22db, bm2bp(0x80)}, "Horace's Regenerate"},
    
    {{0x22dc, bm2bp(0x01)}, "Pigrace finished"},
    {{0x22dc, bm2bp(0x04)}, "Got Cecil's Bazooka?"},
    {{0x22dc, bm2bp(0x08)}, "windwalker unlocked"},
    {{0x22dc, bm2bp(0x10)}, "Gave away Gauge"},
    {{0x22dc, bm2bp(0x20)}, "Gave away Wheel"},
    {{0x22dc, bm2bp(0x40)}, "Gave away Diamond Eyes"},
    
    {{0x22dd, bm2bp(0x01)}, "Verminator dead"},
    {{0x22dd, bm2bp(0x02)}, "Sterling dead"},
    {{0x22dd, bm2bp(0x04)}, "Timberdrake dead"},
    {{0x22dd, bm2bp(0x40)}, "Load east castle"},
    
    {{0x22de, bm2bp(0x04)}, "Queen cutscene below chessboard watched"},
    {{0x22de, bm2bp(0x80)}, "Talked to Cecil"},
    
    {{0x22df, bm2bp(0x01)}, "Doubles dead"},
    {{0x22df, bm2bp(0x02)}, "Crustacia elevator in top position"},
    {{0x22df, bm2bp(0x10)}, "Crustacia rock thrown"},
    {{0x22df, bm2bp(0x20)}, "Crustacia rock landed"},
    {{0x22df, bm2bp(0x80)}, "Cave raptors killed"},
    
    {{0x22e2, bm2bp(0x01)}, "Some flag in 'mids bottom"},
    {{0x22e2, bm2bp(0x02)}, "Some flag in 'mids bottom"},
    {{0x22e2, bm2bp(0x04)}, "Some flag in 'mids bottom"},
    {{0x22e2, bm2bp(0x08)}, "Some flag in 'mids bottom"},
    {{0x22e2, bm2bp(0x10)}, "Some flag in 'mids top"},
    {{0x22e2, bm2bp(0x20)}, "Some flag in 'mids top"},
    {{0x22e2, bm2bp(0x40)}, "Sons defeated in 'mids"},
    {{0x22e2, bm2bp(0x80)}, "Unknown flag checked below 'mids. Levitated?"},
    
    {{0x22e3, bm2bp(0x01)}, "Unknown flag checked below 'mids. Levitated?"},
    {{0x22e3, bm2bp(0x02)}, "Wall below 'mids broken"},
    {{0x22e3, bm2bp(0x04)}, "Wall below 'mids broken"},
    {{0x22e3, bm2bp(0x08)}, "Wall below 'mids broken"},
    {{0x22e3, bm2bp(0x10)}, "Wall below 'mids broken"},
    {{0x22e3, bm2bp(0x20)}, "Tiny defeated"},
    {{0x22e3, bm2bp(0x40)}, "Unknown flag checked out and inside 'mids. Dog freed?"},
    {{0x22e3, bm2bp(0x80)}, "Unknown flag used outside 'mids"},
    
    {{0x22e5, bm2bp(0x01)}, "Unknown 'mids flag"},
    {{0x22e5, bm2bp(0x02)}, "Unknown 'mids flag"},
    {{0x22e5, bm2bp(0x04)}, "Unknown 'mids flag"},
    {{0x22e5, bm2bp(0x08)}, "WW Landing (set before loading fire pit from OW)"},
    {{0x22e5, bm2bp(0x10)}, "???"},
    {{0x22e5, bm2bp(0x20)}, "Defated raptors?"}, // FE visited pre-thraxx or post-ww??
    {{0x22e5, bm2bp(0x40)}, "West castle collapsed"},
    {{0x22e5, bm2bp(0x80)}, "???"}, // USED in hundo
    
    {{0x22e6, bm2bp(0x01)}, "Footknight defeated"},
    {{0x22e6, bm2bp(0x20)}, "Light in storage room"},
    
    {{0x22e7, bm2bp(0x80)}, "Talked to Dude below chessboard"},
    {{0x22e8, bm2bp(0x02)}, "Salabog fight started"},
    {{0x22e9, bm2bp(0x10)}, "Killed robots with no ammo left"}, // Carltron in Crustacia easter egg
    {{0x22e9, bm2bp(0x40)}, "Ruins Minitaur defeated"},
    
    {{0x22ea, bm2bp(0x01)}, "Loot successful"},
    
    {{0x22ea, bm2bp(0x04)}, "No previous save found"},
    
    {{0x22eb, bm2bp(0x02)}, "start pressed in intro"},
    {{0x22eb, bm2bp(0x04)}, "running showcase"},
    {{0x22eb, bm2bp(0x08)}, "debug"},
    {{0x22eb, bm2bp(0x20)}, "in animation"},
    {{0x22ec, bm2bp(0x04)}, "on bug legs"},
    {{0x22ec, bm2bp(0x08)}, "stepped on geyser"},
    {{0x22ec, bm2bp(0x20)}, "unknown intro/outro? flag in prof. lab"},
    //{{0x22ed, bm2bp(0x04)}, "Raptors defeated"}, // this seems to be a temp for raptors
    {{0x22ed, bm2bp(0x08)}, "crustacia intro to be shown"},
    {{0x22ed, bm2bp(0x80)}, "Falling into a pit"},
    {{0x22ee, bm2bp(0x01)}, "unknown intro/outro? flag in prof. lab"},
    
    {{0x22ef, bm2bp(0x02)}, "Square-reminder message in market shown"},
    
    {{0x22f0, bm2bp(0x20)}, "Received grass vest in FE village"},
    {{0x22f1, bm2bp(0x02)}, "Stealing from gourds is OK msg shown"},
    {{0x22f1, bm2bp(0x20)}, "Also FE visited pre-thraxx or post-ww??"},
    {{0x22f1, bm2bp(0x40)}, "Inside outro?"},
    {{0x22f2, bm2bp(0x01)}, "In credits"},
    {{0x22f2, bm2bp(0x02)}, "Swamp leafpad activated"},
    {{0x22f2, bm2bp(0x40)}, "Horace met past aegis/ww?"},
    {{0x22f2, bm2bp(0x80)}, "Palace guard alt. dialog/easter egg"},
    {{0x22f3, bm2bp(0x01)}, "Crush dialog to be shown"},
    {{0x22f3, bm2bp(0x08)}, "Coming from north end"},
    {{0x22f3, bm2bp(0x20)}, "Salabog defeated? invincible?"},
    {{0x22f4, bm2bp(0x08)}, "Prison door 1 open"},
    {{0x22f4, bm2bp(0x10)}, "Prison door 2 open"},
    {{0x22f4, bm2bp(0x20)}, "Prison door 3 open"},
    {{0x22f4, bm2bp(0x40)}, "Prison door 4 open"},
    {{0x22f4, bm2bp(0x80)}, "Prison door 5 open"},
    {{0x22f5, bm2bp(0x01)}, "Prison door 6 open"},
    {{0x22f5, bm2bp(0x02)}, "Prison door 7 open"},
    {{0x22f5, bm2bp(0x80)}, "Naris' age?"},
    
    {{0x22f9, bm2bp(0x10)}, "Second half of Lab cutscene to be played"},
    {{0x22f9, bm2bp(0x20)}, "Energy core teleporter used?"},
    
    // -- auto-generated list of sniffing flags, if we'd parse the rom twice we could skip this definition --
#ifdef __has_include
#if __has_include("sniffflags.inc") // optional include
#include "sniffflags.inc"
#endif
#else // user has to create an empty file
#include "sniffflags.inc"
#endif
    // -- --
};


